// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: report.proto
// Protobuf C++ Version: 5.27.3

#include "report.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Report::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _report_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _reported_id_{0},
        _reporter_id_{0},
        _report_reason_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Report::Report(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportDefaultTypeInternal() {}
  union {
    Report _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportDefaultTypeInternal _Report_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_report_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_report_2eproto = nullptr;
const ::uint32_t
    TableStruct_report_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Report, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Report, _impl_._reported_id_),
        PROTOBUF_FIELD_OFFSET(::Report, _impl_._reporter_id_),
        PROTOBUF_FIELD_OFFSET(::Report, _impl_._report_reason_id_),
        PROTOBUF_FIELD_OFFSET(::Report, _impl_._report_reason_),
        PROTOBUF_FIELD_OFFSET(::Report, _impl_.created_at_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Report)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Report_default_instance_._instance,
};
const char descriptor_table_protodef_report_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014report.proto\"{\n\006Report\022\024\n\014_reported_id"
    "\030\001 \001(\005\022\024\n\014_reporter_id\030\002 \001(\005\022\031\n\021_report_"
    "reason_id\030\003 \001(\005\022\026\n\016_report_reason\030\004 \001(\t\022"
    "\022\n\ncreated_at\030\005 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_report_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_report_2eproto = {
    false,
    false,
    147,
    descriptor_table_protodef_report_2eproto,
    "report.proto",
    &descriptor_table_report_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_report_2eproto::offsets,
    file_level_enum_descriptors_report_2eproto,
    file_level_service_descriptors_report_2eproto,
};
// ===================================================================

class Report::_Internal {
 public:
};

Report::Report(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Report)
}
inline PROTOBUF_NDEBUG_INLINE Report::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Report& from_msg)
      : _report_reason_(arena, from._report_reason_),
        created_at_(arena, from.created_at_),
        _cached_size_{0} {}

Report::Report(
    ::google::protobuf::Arena* arena,
    const Report& from)
    : ::google::protobuf::Message(arena) {
  Report* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, _reported_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, _reported_id_),
           offsetof(Impl_, _report_reason_id_) -
               offsetof(Impl_, _reported_id_) +
               sizeof(Impl_::_report_reason_id_));

  // @@protoc_insertion_point(copy_constructor:Report)
}
inline PROTOBUF_NDEBUG_INLINE Report::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _report_reason_(arena),
        created_at_(arena),
        _cached_size_{0} {}

inline void Report::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, _reported_id_),
           0,
           offsetof(Impl_, _report_reason_id_) -
               offsetof(Impl_, _reported_id_) +
               sizeof(Impl_::_report_reason_id_));
}
Report::~Report() {
  // @@protoc_insertion_point(destructor:Report)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Report::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_._report_reason_.Destroy();
  _impl_.created_at_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Report::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Report, _impl_._cached_size_),
              false,
          },
          &Report::MergeImpl,
          &Report::kDescriptorMethods,
          &descriptor_table_report_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 39, 2> Report::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Report_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Report>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 _reported_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Report, _impl_._reported_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Report, _impl_._reported_id_)}},
    // int32 _reporter_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Report, _impl_._reporter_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Report, _impl_._reporter_id_)}},
    // int32 _report_reason_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Report, _impl_._report_reason_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Report, _impl_._report_reason_id_)}},
    // string _report_reason = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Report, _impl_._report_reason_)}},
    // string created_at = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Report, _impl_.created_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 _reported_id = 1;
    {PROTOBUF_FIELD_OFFSET(Report, _impl_._reported_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 _reporter_id = 2;
    {PROTOBUF_FIELD_OFFSET(Report, _impl_._reporter_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 _report_reason_id = 3;
    {PROTOBUF_FIELD_OFFSET(Report, _impl_._report_reason_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string _report_reason = 4;
    {PROTOBUF_FIELD_OFFSET(Report, _impl_._report_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string created_at = 5;
    {PROTOBUF_FIELD_OFFSET(Report, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\6\0\0\0\16\12\0\0"
    "Report"
    "_report_reason"
    "created_at"
  }},
};

PROTOBUF_NOINLINE void Report::Clear() {
// @@protoc_insertion_point(message_clear_start:Report)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._report_reason_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  ::memset(&_impl_._reported_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_._report_reason_id_) -
      reinterpret_cast<char*>(&_impl_._reported_id_)) + sizeof(_impl_._report_reason_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Report::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Report)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 _reported_id = 1;
  if (this->_internal__reported_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal__reported_id(), target);
  }

  // int32 _reporter_id = 2;
  if (this->_internal__reporter_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal__reporter_id(), target);
  }

  // int32 _report_reason_id = 3;
  if (this->_internal__report_reason_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal__report_reason_id(), target);
  }

  // string _report_reason = 4;
  if (!this->_internal__report_reason().empty()) {
    const std::string& _s = this->_internal__report_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Report._report_reason");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string created_at = 5;
  if (!this->_internal_created_at().empty()) {
    const std::string& _s = this->_internal_created_at();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Report.created_at");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Report)
  return target;
}

::size_t Report::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Report)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string _report_reason = 4;
  if (!this->_internal__report_reason().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal__report_reason());
  }

  // string created_at = 5;
  if (!this->_internal_created_at().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_created_at());
  }

  // int32 _reported_id = 1;
  if (this->_internal__reported_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal__reported_id());
  }

  // int32 _reporter_id = 2;
  if (this->_internal__reporter_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal__reporter_id());
  }

  // int32 _report_reason_id = 3;
  if (this->_internal__report_reason_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal__report_reason_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Report::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Report*>(&to_msg);
  auto& from = static_cast<const Report&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Report)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal__report_reason().empty()) {
    _this->_internal_set__report_reason(from._internal__report_reason());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (from._internal__reported_id() != 0) {
    _this->_impl_._reported_id_ = from._impl_._reported_id_;
  }
  if (from._internal__reporter_id() != 0) {
    _this->_impl_._reporter_id_ = from._impl_._reporter_id_;
  }
  if (from._internal__report_reason_id() != 0) {
    _this->_impl_._report_reason_id_ = from._impl_._report_reason_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Report::CopyFrom(const Report& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Report)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Report::InternalSwap(Report* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_._report_reason_, &other->_impl_._report_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Report, _impl_._report_reason_id_)
      + sizeof(Report::_impl_._report_reason_id_)
      - PROTOBUF_FIELD_OFFSET(Report, _impl_._reported_id_)>(
          reinterpret_cast<char*>(&_impl_._reported_id_),
          reinterpret_cast<char*>(&other->_impl_._reported_id_));
}

::google::protobuf::Metadata Report::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_report_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
